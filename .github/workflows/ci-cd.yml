name: Sistema Educativo Microservicios CI/CD

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        
    - name: Build and Test Config Server
      run: |
        cd config-server
        chmod +x ./gradlew
        ./gradlew build
        
    - name: Build and Test Eureka Server
      run: |
        cd eureka-server
        chmod +x ./gradlew
        ./gradlew build
        
    - name: Build and Test Usuarios Service
      run: |
        cd usuarios-servicio
        chmod +x ./gradlew
        ./gradlew build
        
    - name: Build and Test Asignaturas Service
      run: |
        cd asignaturas-servicio
        chmod +x ./gradlew
        ./gradlew build
        
    - name: Build and Test Matriculas Service
      run: |
        cd matriculas-servicio
        chmod +x ./gradlew
        ./gradlew build
        
    - name: Upload test results
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: test-results
        path: |
          **/build/reports/tests/

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: service-jars
        path: |
          **/build/libs/*.jar
          
  docker-build:
    needs: build-and-test
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Download build artifacts
      uses: actions/download-artifact@v4
      with:
        name: service-jars
        
    - name: Prepare JAR files for Docker build
      run: |
        # Crear las carpetas build/libs en cada proyecto
        mkdir -p config-server/build/libs
        mkdir -p eureka-server/build/libs
        mkdir -p usuarios-servicio/build/libs
        mkdir -p asignaturas-servicio/build/libs
        mkdir -p matriculas-servicio/build/libs
        
        # Mover los archivos JAR a sus ubicaciones correspondientes
        mv config-server/build/libs/*.jar config-server/build/libs/ || true
        mv eureka-server/build/libs/*.jar eureka-server/build/libs/ || true
        mv usuarios-servicio/build/libs/*.jar usuarios-servicio/build/libs/ || true
        mv asignaturas-servicio/build/libs/*.jar asignaturas-servicio/build/libs/ || true
        mv matriculas-servicio/build/libs/*.jar matriculas-servicio/build/libs/ || true
        
        # Verificar que los archivos existen
        ls -la */build/libs/ || true
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: Setup Docker Compose
      uses: ndeloof/install-compose-action@v0.0.1
      with:
        version: v2.23.3
        
    - name: Build Docker images
      run: |
        docker compose build
        
    - name: Save Docker images as artifacts
      run: |
        mkdir -p docker-images
        docker save sistema-educativo-microservicios-angelrenteria-config-server > docker-images/config-server.tar
        docker save sistema-educativo-microservicios-angelrenteria-eureka-server > docker-images/eureka-server.tar
        docker save sistema-educativo-microservicios-angelrenteria-usuarios-servicio > docker-images/usuarios-servicio.tar
        docker save sistema-educativo-microservicios-angelrenteria-asignaturas-servicio > docker-images/asignaturas-servicio.tar
        docker save sistema-educativo-microservicios-angelrenteria-matriculas-servicio > docker-images/matriculas-servicio.tar
      
    - name: Upload Docker images as artifacts
      uses: actions/upload-artifact@v4
      with:
        name: docker-images
        path: docker-images/

  security-scan:
    needs: build-and-test
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        
    - name: Run Dependency Check
      run: |
        mkdir -p reports
        # Descargar e instalar OWASP Dependency Check
        wget https://github.com/jeremylong/DependencyCheck/releases/download/v9.0.10/dependency-check-9.0.10-release.zip
        unzip dependency-check-9.0.10-release.zip
        chmod +x dependency-check/bin/dependency-check.sh
        
        # Ejecutar el an√°lisis
        ./dependency-check/bin/dependency-check.sh --project "Sistema-Educativo-Microservicios" --scan . --format HTML --out ./reports
        
    - name: Upload Security Report
      uses: actions/upload-artifact@v4
      with:
        name: security-report
        path: reports 